#include <stdio.h>
#include <stdbool.h>
#include <ctype.h>
#include <string.h>

typedef struct {
    char estado;
    char codigo[4];
    char cidade[50];
    int populacao;
    float area;
    float pib;
    int pontos_turisticos;
    float densidade;
    float pib_per_capita;
} Carta;

void calcularDadosAdicionais(Carta *carta) {
    carta->densidade = (float)carta->populacao / carta->area;
    carta->pib_per_capita = (carta->pib * 1000) / carta->populacao; // em milhares de reais por habitante
}

void exibirAtributos(int excluido) {
    printf("\nAtributos disponíveis:\n");
    const char* atributos[] = {
        "1 - População",
        "2 - Área",
        "3 - PIB",
        "4 - Pontos Turísticos", 
        "5 - Densidade Demográfica",
        "6 - PIB per capita"
    };
    
    for (int i = 0; i < 6; i++) {
        if (i != excluido - 1) {
            printf("%s\n", atributos[i]);
        }
    }
}

int lerOpcao(int min, int max, int excluido) {
    int opcao;
    char buffer[100];
    
    while (true) {
        printf("Escolha (%d-%d, exceto %d): ", min, max, excluido);
        fgets(buffer, sizeof(buffer), stdin);
        
        if (sscanf(buffer, "%d", &opcao) != 1) {
            printf("Entrada inválida! Digite um número.\n");
            continue;
        }
        
        if (opcao >= min && opcao <= max && opcao != excluido) {
            return opcao;
        }
        
        printf("Opção inválida ou repetida! Tente novamente.\n");
    }
}

float obterValorAtributo(Carta carta, int atributo) {
    switch(atributo) {
        case 1: return (float)carta.populacao;
        case 2: return carta.area;
        case 3: return carta.pib;
        case 4: return (float)carta.pontos_turisticos;
        case 5: return carta.densidade;
        case 6: return carta.pib_per_capita;
        default: return 0;
    }
}

const char* obterNomeAtributo(int atributo) {
    switch(atributo) {
        case 1: return "População";
        case 2: return "Área (km²)";
        case 3: return "PIB (bilhões R$)";
        case 4: return "Pontos Turísticos";
        case 5: return "Densidade Demográfica";
        case 6: return "PIB per capita (mil R$)";
        default: return "Desconhecido";
    }
}

int compararAtributo(float valor1, float valor2, int atributo) {
    // Operador ternário para tratar densidade (menor valor vence)
    return (atributo == 5) ? 
           ((valor1 < valor2) ? 1 : ((valor1 > valor2) ? -1 : 0)) : 
           ((valor1 > valor2) ? 1 : ((valor1 < valor2) ? -1 : 0));
}

void exibirResultadoComparacao(int resultado, char* cidade1, char* cidade2) {
    switch(resultado) {
        case 1:  printf("%s vence!\n", cidade1); break;
        case -1: printf("%s vence!\n", cidade2); break;
        case 0:  printf("Empate!\n"); break;
    }
}

int main() {
    // Inicialização das cartas
    Carta carta1 = {'A', "A01", "São Paulo", 12325000, 1521.11, 699.28, 50};
    Carta carta2 = {'B', "A02", "Rio de Janeiro", 6748000, 1200.25, 300.50, 30};
    
    calcularDadosAdicionais(&carta1);
    calcularDadosAdicionais(&carta2);

    printf("=== SUPER TRUNFO CIDADES ===\n");
    printf("Comparando: %s vs %s\n\n", carta1.cidade, carta2.cidade);

    int opcao;
    do {
        printf("\nMenu Principal:\n");
        printf("1 - Comparar cartas\n");
        printf("2 - Sair\n");
        printf("Escolha: ");
        scanf("%d", &opcao);
        while(getchar() != '\n');

        if (opcao == 1) {
            int atributo1, atributo2;
            
            // Seleção do primeiro atributo
            printf("\nEscolha o PRIMEIRO atributo para comparação:");
            exibirAtributos(0);
            atributo1 = lerOpcao(1, 6, 0);
            
            // Seleção do segundo atributo
            printf("\nEscolha o SEGUNDO atributo (diferente do primeiro):");
            exibirAtributos(atributo1);
            atributo2 = lerOpcao(1, 6, atributo1);
            
            // Obter valores dos atributos
            float valor1_attr1 = obterValorAtributo(carta1, atributo1);
            float valor2_attr1 = obterValorAtributo(carta2, atributo1);
            float valor1_attr2 = obterValorAtributo(carta1, atributo2);
            float valor2_attr2 = obterValorAtributo(carta2, atributo2);
            
            // Comparações individuais
            int resultado1 = compararAtributo(valor1_attr1, valor2_attr1, atributo1);
            int resultado2 = compararAtributo(valor1_attr2, valor2_attr2, atributo2);
            
            // Cálculo das somas
            float soma1 = valor1_attr1 + valor1_attr2;
            float soma2 = valor2_attr1 + valor2_attr2;
            
            // Exibição dos resultados
            printf("\n=== RESULTADOS ===\n");
            printf("%s (%c) vs %s (%c)\n", carta1.cidade, carta1.estado, carta2.cidade, carta2.estado);
            printf("Atributos comparados: %s e %s\n", 
                   obterNomeAtributo(atributo1), obterNomeAtributo(atributo2));
            
            printf("\n%s:\n", carta1.cidade);
            printf("- %s: %.2f\n", obterNomeAtributo(atributo1), valor1_attr1);
            printf("- %s: %.2f\n", obterNomeAtributo(atributo2), valor1_attr2);
            printf("- Soma: %.2f\n", soma1);
            
            printf("\n%s:\n", carta2.cidade);
            printf("- %s: %.2f\n", obterNomeAtributo(atributo1), valor2_attr1);
            printf("- %s: %.2f\n", obterNomeAtributo(atributo2), valor2_attr2);
            printf("- Soma: %.2f\n", soma2);
            
            // Resultados individuais
            printf("\nComparação por %s: ", obterNomeAtributo(atributo1));
            exibirResultadoComparacao(resultado1, carta1.cidade, carta2.cidade);
            
            printf("Comparação por %s: ", obterNomeAtributo(atributo2));
            exibirResultadoComparacao(resultado2, carta1.cidade, carta2.cidade);
            
            // Resultado final
            printf("\n=== RESULTADO FINAL ===\n");
            if (soma1 > soma2) {
                printf("%s vence com maior soma de atributos (%.2f > %.2f)!\n", 
                       carta1.cidade, soma1, soma2);
            } else if (soma2 > soma1) {
                printf("%s vence com maior soma de atributos (%.2f > %.2f)!\n", 
                       carta2.cidade, soma2, soma1);
            } else {
                printf("Empate! Ambas têm soma de %.2f\n", soma1);
            }
            
            printf("\nPressione Enter para continuar...");
            while(getchar() != '\n');
        }
    } while (opcao != 2);

    printf("\nObrigado por jogar Super Trunfo Cidades!\n");
    return 0;
}
